{"version":3,"sources":["src/app/notifications/notifications.page.html","src/app/notifications/notifications-routing.module.ts","src/app/notifications/notifications.module.ts","src/app/notifications/notifications.page.scss","src/app/notifications/notifications.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button>\\n        \\n      </ion-menu-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"apphead\\\">Helpers</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\t\\n\\t<ion-grid >\\n      \\t<ion-row color=\\\"primary\\\" justify-content-center class='formcenter'>\\n\\n        \\t<ion-col align-self-center size-md=\\\"12\\\" size-lg=\\\"12\\\" size-xs=\\\"12\\\">\\n          \\t\\t\\n              <ion-item>\\n                <ion-label>Enable app notifications</ion-label>\\n                <label><ion-toggle color=\\\"success\\\" [(ngModel)]='enablenotification' (ionChange)=\\\"changeStatus()\\\" ></ion-toggle></label>\\n              </ion-item>\\n\\n              <ion-item [hidden]=hiddennearby >\\n                <ion-label>Request from nearby Hospitals</ion-label>\\n                <label><ion-toggle color=\\\"success\\\" [(ngModel)]='enablenearby' (ionChange)=\\\"changeNearByStatus()\\\" ></ion-toggle></label>\\n              </ion-item>\\n              \\n              <ion-item lines=\\\"none\\\" *ngIf=\\\"notificationsList.length > 0\\\" >\\n\\n                  <ion-button size=\\\"medium\\\" type=\\\"button\\\" class=\\\"requestsbutton\\\"  (click)=\\\"clearNotification(0,1,0)\\\" style=\\\"position: absolute;right: 0;\\\">Clear All</ion-button>\\n                \\n              </ion-item>\\n\\n\\t          \\t<div padding>\\n\\t          \\t\\t\\n\\t            \\t<ion-card *ngFor=\\\"let item of notificationsList; let i = index\\\">\\n    \\t\\t\\t\\t\\t  \\t<ion-card-header (click)=\\\"viewRequest(item['requestid'])\\\" >\\n    \\t\\t\\t\\t\\t    \\t<ion-card-title style=\\\"font-size: 20px;\\\">{{item['message']}}</ion-card-title>\\n    \\t\\t\\t\\t\\t    \\t<p>{{item['created_at']}}</p>\\n                    \\n    \\t\\t\\t\\t\\t  \\t</ion-card-header>\\n\\n                  <ion-card-content>\\n                    <p style=\\\"text-align: right;\\\"><ion-label (click)=\\\"clearNotification(item['id'],2,i)\\\">Clear</ion-label></p>\\n                  </ion-card-content>\\n    \\t\\t\\t\\t\\t  </ion-card>\\n\\t          \\t</div>\\n        \\t</ion-col>\\n      \\t</ion-row>\\n    </ion-grid>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NotificationsPage } from './notifications.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NotificationsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotificationsPageRoutingModule } from './notifications-routing.module';\n\nimport { NotificationsPage } from './notifications.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NotificationsPageRoutingModule\n  ],\n  declarations: [NotificationsPage]\n})\nexport class NotificationsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdGlmaWNhdGlvbnMvbm90aWZpY2F0aW9ucy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit,ViewChild, ElementRef } from '@angular/core';\nimport {AlertController, MenuController, LoadingController,IonInfiniteScroll  } from \"@ionic/angular\";\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport { GlobalService } from '../global.service';\nimport { ActivatedRoute } from '@angular/router';\nimport {AppComponent} from '../app.component';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.page.html',\n  styleUrls: ['./notifications.page.scss'],\n})\nexport class NotificationsPage implements OnInit {\n\t  public notificationsList = [];\n\t  public hiddennotfound = true;\n    public hiddennearby = true;\n    public countexe :number = 0;\n    public countexe2 :number = 0;\n    public enablenotification = false;\n    public enablenearby = false;\n\n  \tconstructor(private alertCtrl: AlertController,public menuCtrl:  MenuController,private router: Router,private _global: GlobalService,private httpClient:HttpClient,public loadingController:LoadingController,private activatedRoute: ActivatedRoute,public myapp: AppComponent) {\n       \t\n    }\n\n  \tngOnInit() {\n  \t}\n\n    ionViewDidEnter(infiniteScroll){\n        this.myapp.aboutmenu = 0;\n        if(this._global.userrole == this._global.userrole2){\n            if(this._global.enablenotification == 0){\n                this.enablenotification = false;\n            }else{\n                this.enablenotification = true;\n            }\n            if(this._global.enablenearby == 0){\n                this.enablenearby = false;\n            }else{\n                this.enablenearby = true;\n            }\n        }\n      \n        if(this._global.userrole == 3){\n            this.hiddennearby = false;\n        }\n\n        this.myapp.notifycount = 0;\n        this.getNotifications();\n\n    }\n\n    changeStatus(){\n        \n        var token = this._global.token; \n        var userid = this._global.userid;\n\n        if(userid > 0 && this._global.userrole == this._global.userrole2){\n\n            const httpOptions = {\n                headers: new HttpHeaders({\n                  'Accept': 'application/json',\n                  'Authorization': 'Bearer ' + token\n                })\n            };\n\n            var status = 0;\n            if(this.enablenotification){\n              status = 1;\n            }\n            this.httpClient.post(this._global.domainURL+\"enableNotification\",{\n                \"userid\": userid,\n                \"status\": status\n            },httpOptions)\n            .subscribe(\n                (val:any) => {\n           \n                  if (typeof val.data != \"undefined\") {\n                      \n                      var message = val.message;\n                                \n\n                      if(val.data.success == 1){\n                      \n                          this._global.enablenotification = status;\n                      }else{\n                          this.enablenotification = !this.enablenotification;\n                      } \n\n                      if(this.countexe > 0){\n                          this.getNotifications();\n                      }\n\n                      if(this.countexe > 0)\n                      this._global.showToast(message); // Send toast notification \n                      this.countexe = 1;                  \n                  }\n\n                 \n                },\n                response => {\n                    console.log(\"Get call in error\", response);\n                },\n                () => {\n                    console.log(\"The Get observable is now completed.\");\n              }\n            );\n\n        }\n    }\n\n    changeNearByStatus(){\n        var token = this._global.token; \n        var userid = this._global.userid;\n\n        if(this._global.userrole == 3 && userid > 0 && this._global.userrole == this._global.userrole2){\n\n            const httpOptions = {\n                headers: new HttpHeaders({\n                  'Accept': 'application/json',\n                  'Authorization': 'Bearer ' + token\n                })\n            };\n\n            var status = 0;\n            if(this.enablenearby){\n              status = 1;\n            }\n            this.httpClient.post(this._global.domainURL+\"enableNearbyNotification\",{\n                \"userid\": userid,\n                \"status\": status\n            },httpOptions)\n            .subscribe(\n                (val:any) => {\n           \n                  if (typeof val.data != \"undefined\") {\n                      \n                      var message = val.message;\n                                \n\n                      if(val.data.success == 1){\n                          \n                          this._global.enablenearby = status;\n                      }else{\n                          this.enablenearby = !this.enablenearby;\n                      } \n\n                      if(this.countexe2 > 0){\n                          this._global.showToast(message); // Send toast notification \n                          this.getNotifications();\n                      }\n                      \n                      this.countexe2 = 1;                  \n                  }\n\n                 \n                },\n                response => {\n                    console.log(\"Get call in error\", response);\n                },\n                () => {\n                    console.log(\"The Get observable is now completed.\");\n              }\n            );\n\n        }\n    }\n\n  \tgetNotifications(){\n        \n  \t\t  var token = this._global.token; \n        var userid = this._global.userid;\n        \n        if(userid > 0 && this._global.userrole == this._global.userrole2){\n\n            const httpOptions = {\n              \theaders: new HttpHeaders({\n                \t'Accept': 'application/json',\n                \t'Authorization': 'Bearer ' + token\n              \t})\n            };\n\n            this.httpClient.post(this._global.domainURL+\"getNotifications\",{\n                \"userid\": userid,\n            },httpOptions)\n            .subscribe(\n              \t(val:any) => {\n           \n                \tif (typeof val.data != \"undefined\") {\n                  \n                    \tif(val.data.success == 1){\n                    \t\t\t\n    \t\t                  this.notificationsList = val.data.list;\n    \t\t           \t\t   console.log('response : ' + JSON.stringify(this.notificationsList) );               \t\n    \t                    if(this.notificationsList.length <= 0){\n    \t                      this.hiddennotfound = false;\n    \t                    }else{\n    \t                      this.hiddennotfound = true;\n    \t                    }\n    \t\t                \n                    \t}                \n                \t}\n\n                 \n              \t},\n              \tresponse => {\n                  \tconsole.log(\"Get call in error\", response);\n              \t},\n              \t() => {\n                  \tconsole.log(\"The Get observable is now completed.\");\n            \t}\n            );\n        }\n  \t}\n\n    viewRequest(id){\n\n        var token = this._global.token; \n        var userid = this._global.userid;\n        var userrole = this._global.userrole;\n        const httpOptions = {\n            headers: new HttpHeaders({\n              'Accept': 'application/json',\n              'Authorization': 'Bearer ' + token\n            })\n        };\n\n        this.httpClient.post(this._global.domainURL+\"viewRequest\",{\n            \"id\": id,\n        },httpOptions)\n        .subscribe(\n          (val:any) => {\n           \n              if (typeof val.data != \"undefined\") {\n                  \n                  if(val.data.success == 1){\n                          \n                      var cartid = val.data.id;\n                      var type = val.data.type;\n\n\n                      if(userrole == 2){\n                        \n                          if(type == \"Food\"){\n                              this.router.navigateByUrl('/foodrequest/'+cartid+'/1/1');\n                          }\n                          if(type == \"Essentials\"){\n                              this.router.navigateByUrl('/essentialsrequest/'+cartid+'/1/1');\n                          }\n                          if(type == \"Childcare\"){\n                              this.router.navigateByUrl('/childcarerequest/'+cartid+'/1/1');\n                          }\n                      } \n                      if(userrole == 3){\n                          if(type == 'Food'){\n                              this.router.navigateByUrl('/foodrequestdetails/'+id+'/1');\n                          }\n                          if(type == 'Essentials'){\n                              this.router.navigateByUrl('/essentialsrequestdetails/'+id + '/1');\n                          }\n                          if(type == 'Childcare'){\n                              this.router.navigateByUrl('/childcarerequestdetails/'+id +'/1');\n                          }\n                      }\n                    \n                   \n                  }                \n              }\n\n          },\n          response => {\n              console.log(\"Get call in error\", response);\n          },\n          () => {\n              console.log(\"The Get observable is now completed.\");\n          }\n        );\n    }\n\n\n    clearNotification(id,type,index){\n\n        var token = this._global.token; \n        var userid = this._global.userid;\n\n        const httpOptions = {\n            headers: new HttpHeaders({\n                'Accept': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        };\n\n        this.httpClient.post(this._global.domainURL+\"clearNotification\",{\n            \"userid\": userid,\n            \"id\": id,\n            \"type\": type\n        },httpOptions)\n        .subscribe(\n            (val:any) => {\n           \n                if (typeof val.data != \"undefined\") {\n                  \n                    if(val.data.success == 1){\n                        if(type == 1){\n                            this.notificationsList = [];\n\n                        }\n\n                        if(type == 2){\n                            this.notificationsList.splice(index, 1);\n                        }\n                        \n                        // Notification count\n                        this.myapp.notifycount = val.data.countnotification;\n                    }                \n                }\n\n            },\n            response => {\n                console.log(\"Get call in error\", response);\n            },\n            () => {\n                console.log(\"The Get observable is now completed.\");\n            }\n        );\n    }\n}\n"],"sourceRoot":"webpack:///","file":"notifications-notifications-module-es5.js"}