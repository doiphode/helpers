{"version":3,"sources":["./src/app/notifications/notifications.page.html","./src/app/notifications/notifications-routing.module.ts","./src/app/notifications/notifications.module.ts","./src/app/notifications/notifications.page.scss","./src/app/notifications/notifications.page.ts"],"names":[],"mappings":"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","file":"notifications-notifications-module-es2015.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button>\\n        \\n      </ion-menu-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"apphead\\\"><img src=\\\"assets/banner.png\\\" style=\\\" vertical-align: middle;\\\"></ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\t\\n\\t<ion-grid >\\n      \\t<ion-row color=\\\"primary\\\" justify-content-center class='formcenter'>\\n\\n        \\t<ion-col align-self-center size-md=\\\"12\\\" size-lg=\\\"12\\\" size-xs=\\\"12\\\">\\n          \\t\\t\\n              <ion-item>\\n                <ion-label>Enable app notifications</ion-label>\\n                <label><ion-toggle color=\\\"success\\\" [(ngModel)]='enablenotification' (ionChange)=\\\"changeStatus()\\\" ></ion-toggle></label>\\n              </ion-item>\\n\\n              <ion-item [hidden]=hiddennearby >\\n                <ion-label>Request from nearby Hospitals</ion-label>\\n                <label><ion-toggle color=\\\"success\\\" [(ngModel)]='enablenearby' (ionChange)=\\\"changeNearByStatus()\\\" ></ion-toggle></label>\\n              </ion-item>\\n              \\n              <ion-item lines=\\\"none\\\" *ngIf=\\\"notificationsList.length > 0\\\" >\\n\\n                  <ion-button size=\\\"medium\\\" type=\\\"button\\\" class=\\\"requestsbutton\\\"  (click)=\\\"clearNotification(0,1,0)\\\" style=\\\"position: absolute;right: 0;\\\">Clear All</ion-button>\\n                \\n              </ion-item>\\n\\n\\t          \\t<div padding>\\n\\t          \\t\\t\\n\\t            \\t<ion-card *ngFor=\\\"let item of notificationsList; let i = index\\\">\\n    \\t\\t\\t\\t\\t  \\t<ion-card-header (click)=\\\"viewRequest(item['requestid'])\\\" >\\n    \\t\\t\\t\\t\\t    \\t<ion-card-title style=\\\"font-size: 20px;\\\">{{item['message']}}</ion-card-title>\\n    \\t\\t\\t\\t\\t    \\t<p>{{item['created_at']}}</p>\\n                    \\n    \\t\\t\\t\\t\\t  \\t</ion-card-header>\\n\\n                  <ion-card-content>\\n                    <p style=\\\"text-align: right;\\\"><ion-label (click)=\\\"clearNotification(item['id'],2,i)\\\">Clear</ion-label></p>\\n                  </ion-card-content>\\n    \\t\\t\\t\\t\\t  </ion-card>\\n\\t          \\t</div>\\n        \\t</ion-col>\\n      \\t</ion-row>\\n    </ion-grid>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NotificationsPage } from './notifications.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NotificationsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotificationsPageRoutingModule } from './notifications-routing.module';\n\nimport { NotificationsPage } from './notifications.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NotificationsPageRoutingModule\n  ],\n  declarations: [NotificationsPage]\n})\nexport class NotificationsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdGlmaWNhdGlvbnMvbm90aWZpY2F0aW9ucy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit,ViewChild, ElementRef } from '@angular/core';\nimport {AlertController, MenuController, LoadingController,IonInfiniteScroll  } from \"@ionic/angular\";\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport { GlobalService } from '../global.service';\nimport { ActivatedRoute } from '@angular/router';\nimport {AppComponent} from '../app.component';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.page.html',\n  styleUrls: ['./notifications.page.scss'],\n})\nexport class NotificationsPage implements OnInit {\n\t  public notificationsList = [];\n\t  public hiddennotfound = true;\n    public hiddennearby = true;\n    public countexe :number = 0;\n    public countexe2 :number = 0;\n    public enablenotification = false;\n    public enablenearby = false;\n\n  \tconstructor(private alertCtrl: AlertController,public menuCtrl:  MenuController,private router: Router,private _global: GlobalService,private httpClient:HttpClient,public loadingController:LoadingController,private activatedRoute: ActivatedRoute,public myapp: AppComponent) {\n       \t\n    }\n\n  \tngOnInit() {\n  \t}\n\n    ionViewDidEnter(infiniteScroll){\n        this.myapp.aboutmenu = 0;\n        if(this._global.userrole == this._global.userrole2){\n            if(this._global.enablenotification == 0){\n                this.enablenotification = false;\n            }else{\n                this.enablenotification = true;\n            }\n            if(this._global.enablenearby == 0){\n                this.enablenearby = false;\n            }else{\n                this.enablenearby = true;\n            }\n        }\n      \n        if(this._global.userrole == 3){\n            this.hiddennearby = false;\n        }\n\n        this.myapp.notifycount = 0;\n        this.getNotifications();\n\n    }\n\n    changeStatus(){\n        \n        var token = this._global.token; \n        var userid = this._global.userid;\n\n        if(userid > 0 && this._global.userrole == this._global.userrole2){\n\n            const httpOptions = {\n                headers: new HttpHeaders({\n                  'Accept': 'application/json',\n                  'Authorization': 'Bearer ' + token\n                })\n            };\n\n            var status = 0;\n            if(this.enablenotification){\n              status = 1;\n            }\n            this.httpClient.post(this._global.domainURL+\"enableNotification\",{\n                \"userid\": userid,\n                \"status\": status\n            },httpOptions)\n            .subscribe(\n                (val:any) => {\n           \n                  if (typeof val.data != \"undefined\") {\n                      \n                      var message = val.message;\n                                \n\n                      if(val.data.success == 1){\n                      \n                          this._global.enablenotification = status;\n                      }else{\n                          this.enablenotification = !this.enablenotification;\n                      } \n\n                      if(this.countexe > 0){\n                          this.getNotifications();\n                      }\n\n                      if(this.countexe > 0)\n                      this._global.showToast(message); // Send toast notification \n                      this.countexe = 1;                  \n                  }\n\n                 \n                },\n                response => {\n                    console.log(\"Get call in error\", response);\n                },\n                () => {\n                    console.log(\"The Get observable is now completed.\");\n              }\n            );\n\n        }\n    }\n\n    changeNearByStatus(){\n        var token = this._global.token; \n        var userid = this._global.userid;\n\n        if(this._global.userrole == 3 && userid > 0 && this._global.userrole == this._global.userrole2){\n\n            const httpOptions = {\n                headers: new HttpHeaders({\n                  'Accept': 'application/json',\n                  'Authorization': 'Bearer ' + token\n                })\n            };\n\n            var status = 0;\n            if(this.enablenearby){\n              status = 1;\n            }\n            this.httpClient.post(this._global.domainURL+\"enableNearbyNotification\",{\n                \"userid\": userid,\n                \"status\": status\n            },httpOptions)\n            .subscribe(\n                (val:any) => {\n           \n                  if (typeof val.data != \"undefined\") {\n                      \n                      var message = val.message;\n                                \n\n                      if(val.data.success == 1){\n                          \n                          this._global.enablenearby = status;\n                      }else{\n                          this.enablenearby = !this.enablenearby;\n                      } \n\n                      if(this.countexe2 > 0){\n                          this._global.showToast(message); // Send toast notification \n                          this.getNotifications();\n                      }\n                      \n                      this.countexe2 = 1;                  \n                  }\n\n                 \n                },\n                response => {\n                    console.log(\"Get call in error\", response);\n                },\n                () => {\n                    console.log(\"The Get observable is now completed.\");\n              }\n            );\n\n        }\n    }\n\n  \tgetNotifications(){\n        \n  \t\t  var token = this._global.token; \n        var userid = this._global.userid;\n        \n        if(userid > 0 && this._global.userrole == this._global.userrole2){\n\n            const httpOptions = {\n              \theaders: new HttpHeaders({\n                \t'Accept': 'application/json',\n                \t'Authorization': 'Bearer ' + token\n              \t})\n            };\n\n            this.httpClient.post(this._global.domainURL+\"getNotifications\",{\n                \"userid\": userid,\n            },httpOptions)\n            .subscribe(\n              \t(val:any) => {\n           \n                \tif (typeof val.data != \"undefined\") {\n                  \n                    \tif(val.data.success == 1){\n                    \t\t\t\n    \t\t                  this.notificationsList = val.data.list;\n    \t\t           \t\t   console.log('response : ' + JSON.stringify(this.notificationsList) );               \t\n    \t                    if(this.notificationsList.length <= 0){\n    \t                      this.hiddennotfound = false;\n    \t                    }else{\n    \t                      this.hiddennotfound = true;\n    \t                    }\n    \t\t                \n                    \t}                \n                \t}\n\n                 \n              \t},\n              \tresponse => {\n                  \tconsole.log(\"Get call in error\", response);\n              \t},\n              \t() => {\n                  \tconsole.log(\"The Get observable is now completed.\");\n            \t}\n            );\n        }\n  \t}\n\n    viewRequest(id){\n\n        var token = this._global.token; \n        var userid = this._global.userid;\n        var userrole = this._global.userrole;\n        const httpOptions = {\n            headers: new HttpHeaders({\n              'Accept': 'application/json',\n              'Authorization': 'Bearer ' + token\n            })\n        };\n\n        this.httpClient.post(this._global.domainURL+\"viewRequest\",{\n            \"id\": id,\n        },httpOptions)\n        .subscribe(\n          (val:any) => {\n           \n              if (typeof val.data != \"undefined\") {\n                  \n                  if(val.data.success == 1){\n                          \n                      var cartid = val.data.id;\n                      var type = val.data.type;\n\n\n                      if(userrole == 2){\n                        \n                          if(type == \"Food\"){\n                              this.router.navigateByUrl('/foodrequest/'+cartid+'/1/1');\n                          }\n                          if(type == \"Essentials\"){\n                              this.router.navigateByUrl('/essentialsrequest/'+cartid+'/1/1');\n                          }\n                          if(type == \"Childcare\"){\n                              this.router.navigateByUrl('/childcarerequest/'+cartid+'/1/1');\n                          }\n                      } \n                      if(userrole == 3){\n                          if(type == 'Food'){\n                              this.router.navigateByUrl('/foodrequestdetails/'+id+'/1');\n                          }\n                          if(type == 'Essentials'){\n                              this.router.navigateByUrl('/essentialsrequestdetails/'+id + '/1');\n                          }\n                          if(type == 'Childcare'){\n                              this.router.navigateByUrl('/childcarerequestdetails/'+id +'/1');\n                          }\n                      }\n                    \n                   \n                  }                \n              }\n\n          },\n          response => {\n              console.log(\"Get call in error\", response);\n          },\n          () => {\n              console.log(\"The Get observable is now completed.\");\n          }\n        );\n    }\n\n\n    clearNotification(id,type,index){\n\n        var token = this._global.token; \n        var userid = this._global.userid;\n\n        const httpOptions = {\n            headers: new HttpHeaders({\n                'Accept': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        };\n\n        this.httpClient.post(this._global.domainURL+\"clearNotification\",{\n            \"userid\": userid,\n            \"id\": id,\n            \"type\": type\n        },httpOptions)\n        .subscribe(\n            (val:any) => {\n           \n                if (typeof val.data != \"undefined\") {\n                  \n                    if(val.data.success == 1){\n                        if(type == 1){\n                            this.notificationsList = [];\n\n                        }\n\n                        if(type == 2){\n                            this.notificationsList.splice(index, 1);\n                        }\n                        \n                        // Notification count\n                        this.myapp.notifycount = val.data.countnotification;\n                    }                \n                }\n\n            },\n            response => {\n                console.log(\"Get call in error\", response);\n            },\n            () => {\n                console.log(\"The Get observable is now completed.\");\n            }\n        );\n    }\n}\n"],"sourceRoot":"webpack:///"}